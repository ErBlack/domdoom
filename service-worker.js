"use strict";var precacheConfig=[["/doomsday/index.html","f54eeec8bff5870fe6151eed73cfe4e2"],["/doomsday/static/css/main.4eabe2de.css","baa3b5989ca618ca9272d612aacd7936"],["/doomsday/static/js/main.3f9fd035.js","aec8bf0a18428275e69970bfb9f2e251"],["/doomsday/static/media/shota0.9c1d0577.png","9c1d05775dae5e16f426a9f6fa32f948"],["/doomsday/static/media/wall48_1.b566fefb.png","b566fefb6d704ec14afb52b44e5a1b82"],["/doomsday/static/media/wall48_3.6778f653.png","6778f653ff4f13c9c574687f6bd84a20"],["/doomsday/static/media/wall48_4.9ba6b6c2.png","9ba6b6c2e71fb29340ba437561a92827"],["/doomsday/static/media/wall50_1.33a5f889.png","33a5f889a8f841750f4ce2a7a040877d"],["/doomsday/static/media/wall50_2.2b8aa37c.png","2b8aa37c23c1796eb25a7510d46dd1e4"],["/doomsday/static/media/wall51_2.c36b9a18.png","c36b9a1835bcd16441be9b5820895228"],["/doomsday/static/media/wall51_3.0e66f12d.png","0e66f12d8cbe4d370ef9dfe02672c91c"],["/doomsday/static/media/wall58_1.6c8a2bee.png","6c8a2bee1dadef50813f677f8ce82b1e"],["/doomsday/static/media/wall58_2.1dca70ee.png","1dca70ee9c778f9739447b27a59cd1fe"],["/doomsday/static/media/wall58_3.2acaf7a8.png","2acaf7a86576ba5fd7751469aa1bb80b"],["/doomsday/static/media/wall59_1.b9ed1d4b.png","b9ed1d4bae836b9247d7473295bcd729"],["/doomsday/static/media/wall59_2.3d8756e0.png","3d8756e0101e790740a2029402c26c5a"],["/doomsday/static/media/wall59_3.edf3d8b6.png","edf3d8b6e66774a66e285e4ab8c2bfe7"],["/doomsday/static/media/wall59_4.8c3de0d0.png","8c3de0d0e6ee739e40677c2761e6b161"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var r="/doomsday/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});